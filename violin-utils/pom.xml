<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.wolf</groupId>
        <artifactId>violin</artifactId>
        <version>1.0-SNAPSHOT</version>
        <!--relativePath是可选的,maven会首先搜索这个地址,再搜索本地、远程repositories,默认是找上一级的pom-->
        <!--<relativePath>/pom.xml</relativePath>-->
    </parent>

  <!--<groupId>com.wolf</groupId>--><!--redundant-->
  <artifactId>violin-utils</artifactId>
    <!--packaging : 打包的格式，可以为：pom , jar , maven-plugin , ejb , war , ear , rar , par-->
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>violin-utils</name>
  <url>http://maven.apache.org</url>

    <build>
        <!--使用不同的属性文件-->
        <filters>
            <filter>src/main/filters/${envPrefix}.properties</filter>
        </filters>

        <!--指定资源位置，被用来打入jar-->
        <resources>
            <resource>
                <!--<includes></includes>-->
                <!--<excludes></excludes>-->
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <!--maven-resources-plugin，有时间这个也可以试试。可以将copy-resources拷贝到指定目录，这样就可以编码时分开，然后打包时合并。-->

        <plugins>
            <!--也可以单独指定描述文件，加参数 -Ddescriptor=src/main/assembly/assembly.xml-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <!--全局执行器的配置，执行命令assembly:assembly即可，不用再加参数-->
                <!--<configuration>-->
                <!--<descriptors>-->
                <!--<descriptor>src/main/assembly/assembly.xml</descriptor>-->
                <!--</descriptors>-->
                <!--</configuration>-->
                <executions>
                    <execution>
                        <id>make-a-jar</id>
                        <!-- 绑定到package生命周期阶段上 -->
                        <phase>package</phase>
                        <goals>
                            <!-- 只运行一次 -->
                            <goal>single</goal>
                        </goals>
                        <!--给这个执行器单独配置的-->
                        <configuration>
                            <!--用于过滤assembly.xml中涉及的文件的属性,例如：test-assembly-filter.properties-->
                            <filters>
                                <filter>${project.basedir}/src/main/assembly/assembly-filter.properties</filter>
                            </filters>
                            <descriptors>
                                <descriptor>${project.basedir}/src/main/assembly/assembly.xml</descriptor>
                            </descriptors>
                            <!--maven预定义了4个描述文件-->
                            <!--<descriptorRefs>-->
                            <!--<descriptorRef>jar-with-dependencies</descriptorRef>-->
                            <!--</descriptorRefs>-->
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>

        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>commons-net</groupId>
            <artifactId>commons-net</artifactId>
            <version>3.3</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.bouncycastle/bcprov-jdk16 -->
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk16</artifactId>
            <version>1.46</version>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
            <version>4.3.1</version>
            <exclusions>
                <exclusion>
                    <artifactId>commons-logging</artifactId>
                    <groupId>commons-logging</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>commons-codec</artifactId>
                    <groupId>commons-codec</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>25.0-jre</version>
        </dependency>


    </dependencies>




</project>
