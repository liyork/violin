package com.wolf.test.netty;

//netty5因为一些更为复杂的特性和没有显著的提高性能已经被放弃了

//nio 在linux上使用的是epoll ，epoll支持在一个进程中打开的FD是操作系统最大文件句柄数，而select模型单进程打开的FD是受限的 select模型默认FD是1024 。
// 操作系统最大文件句柄数跟内存有关，1GB内存的机器上，大概是10万个句柄左右。可以通过cat /proc/sys/fs/file-max 查看

//netty简化了NIO繁杂的api调用。NIO自身也有bug导致CPU 100%的bug,netty规避了

//半包、粘包
//应用程序写入的数据大于套接字缓冲区大小，造成半包现象。
//tcp报文长度减去tcp头部长度大于MSS(最大报文长度)时发生半包
//应用程序写入数据小于套接字缓冲区大小，网卡将应用多次写入的数据发送到网络上，发生发生粘包现象
//接收方未能及时读取套接字缓冲区数据，发生粘包。

//tcp不知道业务逻辑，只按照tcp缓冲区的实际情况进行包的划分。
//解决半包、粘包问题本质是能够区分完整的业务应用数据边界，按照边界完整地接收netty传输的数据。